{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5050/api';\n  }\n  getUser() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n  getRents() {\n    return this.http.get(`${this.baseUrl}/rents`);\n  }\n  createRent(craftObj) {\n    return this.http.post(`${this.baseUrl}/rents/create`, craftObj);\n  }\n  getOneRent(id) {\n    return this.http.get(`${this.baseUrl}/rents/details/${id}`);\n  }\n  editRent(id, editObj) {\n    return this.http.post(`${this.baseUrl}/rents/${id}/edit`, editObj);\n  }\n  deleteRent(id) {\n    return this.http.delete(`${this.baseUrl}/rents/${id}/edit`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","baseUrl","getUser","get","getRents","createRent","craftObj","post","getOneRent","id","editRent","editObj","deleteRent","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\apeNPC\\Desktop\\GitHubPower\\JSAngular-June2023\\car-na-mall\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private baseUrl: string = 'http://localhost:5050/api';\n  \n  constructor(private http: HttpClient) { }\n\n  getUser(){\n    return this.http.get<any>(`${this.baseUrl}/users`);\n  }\n\n  getRents(){\n    return this.http.get<any[]>(`${this.baseUrl}/rents`);\n  }\n  createRent(craftObj: any){\n      return this.http.post<any>(`${this.baseUrl}/rents/create`, craftObj);\n  }\n  getOneRent(id: any){\n    return this.http.get<any>(`${this.baseUrl}/rents/details/${id}`, );\n  }\n\n  editRent(id: string, editObj: any){\n    return this.http.post<any>(`${this.baseUrl}/rents/${id}/edit`, editObj)\n  }\n  deleteRent(id: string) {\n    return this.http.delete<any>(`${this.baseUrl}/rents/${id}/edit`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAW,2BAA2B;EAEb;EAExCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,QAAQ,CAAC;EACpD;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,OAAO,QAAQ,CAAC;EACtD;EACAI,UAAUA,CAACC,QAAa;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,OAAO,eAAe,EAAEK,QAAQ,CAAC;EACxE;EACAE,UAAUA,CAACC,EAAO;IAChB,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,kBAAkBQ,EAAE,EAAE,CAAG;EACpE;EAEAC,QAAQA,CAACD,EAAU,EAAEE,OAAY;IAC/B,OAAO,IAAI,CAACX,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,OAAO,UAAUQ,EAAE,OAAO,EAAEE,OAAO,CAAC;EACzE;EACAC,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACa,MAAM,CAAM,GAAG,IAAI,CAACZ,OAAO,UAAUQ,EAAE,OAAO,CAAC;EAClE;;AAzBWX,UAAU,C;mBAAVA,UAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVnB,UAAU,C;SAAVA,UAAU;EAAAoB,OAAA,EAAVpB,UAAU,CAAAqB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}