{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = 'http://localhost:5050/api/users';\n  }\n  register(userObj) {\n    return this.http.post(`${this.baseUrl}/register`, userObj);\n  }\n  login(loginObj) {\n    return this.http.post(`${this.baseUrl}/login`, loginObj);\n  }\n  storeToken(tokenValue) {\n    return localStorage.setItem('token', tokenValue);\n  }\n  getProfile() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLogged() {\n    return !!localStorage.getItem('token');\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    this.router.navigate(['home']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","router","baseUrl","register","userObj","post","login","loginObj","storeToken","tokenValue","localStorage","setItem","getProfile","get","getToken","getItem","isLogged","logOut","removeItem","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\apeNPC\\Desktop\\GitHubPower\\JSAngular-June2023\\car-na-mall\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl: string = 'http://localhost:5050/api/users'\n  constructor(private http: HttpClient, private router: Router) { }\n\n   register(userObj: any){\n     return this.http.post<any>(`${this.baseUrl}/register`, userObj);\n   }\n\n   login(loginObj: any){\n     return this.http.post<any>(`${this.baseUrl}/login`, loginObj); \n   }\n\n   storeToken(tokenValue: string){\n    return localStorage.setItem('token', tokenValue)\n   }\n   getProfile(){\n     return this.http.get<any>(`${this.baseUrl}/users`);\n   }\n\n   getToken(){\n    return localStorage.getItem('token');\n   }\n\n   isLogged():boolean {\n    return !!localStorage.getItem('token');\n   }\n\n   logOut(){\n    localStorage.removeItem('token');\n    this.router.navigate(['home']);\n   }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAD5C,KAAAC,OAAO,GAAW,iCAAiC;EACK;EAE/DC,QAAQA,CAACC,OAAY;IACnB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,WAAW,EAAEE,OAAO,CAAC;EACjE;EAEAE,KAAKA,CAACC,QAAa;IACjB,OAAO,IAAI,CAACP,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEK,QAAQ,CAAC;EAC/D;EAEAC,UAAUA,CAACC,UAAkB;IAC5B,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,UAAU,CAAC;EACjD;EACAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACX,OAAO,QAAQ,CAAC;EACpD;EAEAY,QAAQA,CAAA;IACP,OAAOJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;EACrC;EAEAC,QAAQA,CAAA;IACP,OAAO,CAAC,CAACN,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;EACvC;EAEAE,MAAMA,CAAA;IACLP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAC/B;;AA9BUrB,WAAW,C;mBAAXA,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAX3B,WAAW,C;SAAXA,WAAW;EAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}