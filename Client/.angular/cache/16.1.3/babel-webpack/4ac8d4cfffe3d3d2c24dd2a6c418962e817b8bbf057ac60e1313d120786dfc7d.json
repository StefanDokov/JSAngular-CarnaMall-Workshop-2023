{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nexport default class ValidateForm {\n  static validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}","map":{"version":3,"names":["FormControl","FormGroup","ValidateForm","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf"],"sources":["C:\\Users\\apeNPC\\Desktop\\GitHubPower\\JSAngular-June2023\\car-na-mall\\src\\app\\validators\\validateforms.ts"],"sourcesContent":["import { FormControl, FormGroup } from \"@angular/forms\";\r\n\r\n\r\nexport default class ValidateForm {\r\n    static validateAllFormFields(formGroup: FormGroup){\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n          const control = formGroup.get(field);\r\n          if (control instanceof FormControl){\r\n            control.markAsDirty({onlySelf: true});\r\n          } else if (control instanceof FormGroup) {\r\n            this.validateAllFormFields(control);\r\n          }\r\n        })\r\n      } \r\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAGvD,eAAc,MAAOC,YAAY;EAC7B,OAAOC,qBAAqBA,CAACC,SAAoB;IAC7CC,MAAM,CAACC,IAAI,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAACC,KAAK,IAAG;MAC9C,MAAMC,OAAO,GAAGN,SAAS,CAACO,GAAG,CAACF,KAAK,CAAC;MACpC,IAAIC,OAAO,YAAYV,WAAW,EAAC;QACjCU,OAAO,CAACE,WAAW,CAAC;UAACC,QAAQ,EAAE;QAAI,CAAC,CAAC;OACtC,MAAM,IAAIH,OAAO,YAAYT,SAAS,EAAE;QACvC,IAAI,CAACE,qBAAqB,CAACO,OAAO,CAAC;;IAEvC,CAAC,CAAC;EACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}