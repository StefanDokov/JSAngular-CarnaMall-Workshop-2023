{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nexport class TokenInterceptor {\n  constructor(auth, toast, router) {\n    this.auth = auth;\n    this.toast = toast;\n    this.router = router;\n  }\n  intercept(request, next) {\n    const myToken = this.auth.getToken();\n    if (myToken != null) {\n      request = request.clone({\n        setHeaders: {\n          authorization: `Bearer ${myToken}`\n        }\n      });\n    }\n    return next.handle(request).pipe(catchError(err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          this.toast.warning({\n            detail: \"Warning\",\n            summary: 'Token is expired!',\n            duration: 5000\n          });\n          this.router.navigate(['login']);\n        }\n      }\n      return throwError(() => new Error('Some other error occured'));\n    }));\n  }\n}\nTokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n  return new (t || TokenInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.NgToastService), i0.ɵɵinject(i3.Router));\n};\nTokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenInterceptor,\n  factory: TokenInterceptor.ɵfac\n});","map":{"version":3,"names":["HttpErrorResponse","catchError","throwError","TokenInterceptor","constructor","auth","toast","router","intercept","request","next","myToken","getToken","clone","setHeaders","authorization","handle","pipe","err","status","warning","detail","summary","duration","navigate","Error","i0","ɵɵinject","i1","AuthService","i2","NgToastService","i3","Router","factory","ɵfac"],"sources":["C:\\Users\\apeNPC\\Desktop\\GitHubPower\\JSAngular-June2023\\car-na-mall\\src\\app\\interceptors\\token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { NgToastService } from 'ng-angular-popup';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService, private toast: NgToastService, private router: Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const myToken = this.auth.getToken();\n\n    if (myToken != null) {\n      request = request.clone({\n        setHeaders: {authorization: `Bearer ${myToken}`}\n      })\n    }\n    return next.handle(request).pipe(\n      catchError((err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.toast.warning({detail: \"Warning\", summary: 'Token is expired!', duration: 5000});\n            this.router.navigate(['login']);\n          }\n        }\n        return throwError(() => new Error('Some other error occured'));\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAKEA,iBAAiB,QACZ,sBAAsB;AAC7B,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;;AAMzD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAiB,EAAUC,KAAqB,EAAUC,MAAc;IAAxE,KAAAF,IAAI,GAAJA,IAAI;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/FC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,OAAO,GAAG,IAAI,CAACN,IAAI,CAACO,QAAQ,EAAE;IAEpC,IAAID,OAAO,IAAI,IAAI,EAAE;MACnBF,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC;QACtBC,UAAU,EAAE;UAACC,aAAa,EAAE,UAAUJ,OAAO;QAAE;OAChD,CAAC;;IAEJ,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC,CAACQ,IAAI,CAC9BhB,UAAU,CAAEiB,GAAQ,IAAI;MACtB,IAAIA,GAAG,YAAYlB,iBAAiB,EAAE;QACpC,IAAIkB,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UACtB,IAAI,CAACb,KAAK,CAACc,OAAO,CAAC;YAACC,MAAM,EAAE,SAAS;YAAEC,OAAO,EAAE,mBAAmB;YAAEC,QAAQ,EAAE;UAAI,CAAC,CAAC;UACrF,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;;MAGnC,OAAOtB,UAAU,CAAC,MAAM,IAAIuB,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAChE,CAAC,CAAC,CACH;EACH;;AAvBWtB,gBAAgB,C;mBAAhBA,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAAhB9B,gBAAgB,C;SAAhBA,gBAAgB;EAAA+B,OAAA,EAAhB/B,gBAAgB,CAAAgC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}